---
openapi: 3.0.1
info:
  title: MultiWoven API
  version: 1.0.0
  description: |
    **The MultiWoven Management API** offers a robust solution for managing the virtual pet store's resources. It encapsulates a wide range of functionalities, from user authentication processes (signup, login, and code verification) to comprehensive management of workspaces.

    _Key Features:_
    - **User Authentication**: Secure endpoints for user signup, login, and confirmation code verification.
    - **Workspace Management**: Robust management of workspaces, including creation, modification, and deletion functionalities.
    - **Scalable Architecture**: Designed to cater to the growing needs of the pet store, ensuring high availability and performance.
    - **Security**: Implements best practices in security, ensuring safe transactions and data protection.

    The API follows RESTful principles, providing a clear, intuitive way for developers to interact with our system. All endpoints return JSON-formatted responses and adhere to standard HTTP response codes for ease of use and understanding.

paths:
  "/api/v1/login":
    post:
      summary: User Login
      tags:
      - Authentication
      description: |
        This endpoint allows users to log in to their account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: john@example.com
                password:
                  type: string
                  format: password
                  example: xxxxxxx
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Authentication token
        '401':
          description: Unauthorized - Incorrect credentials
        '500':
          description: Internal Server Error
        
  "/api/v1/signup":
    post:
      summary: User Signup
      tags:
      - Authentication
      description: |
        This endpoint allows users to create an account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: john@example.com
                password:
                  type: string
                  format: password
                  example: xxxxxxx
                password_confirmation:
                  type: string
                  format: password
                  example: xxxxxxx
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Invalid input
        '409':
          description: User already exists

  "/api/v1/verify_code":
    post:
      summary: Verify User Code
      tags:
      - Authentication
      description: |
        This endpoint verifies the confirmation code sent to a user's email.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: john@example.com
                confirmation_code:
                  type: string
                  example: "295604"
      responses:
        '200':
          description: Code verification successful
        '400':
          description: Invalid request or code
        '401':
          description: Unauthorized - Incorrect code or email
        '500':
          description: Internal Server Error

  "/api/v1/logout":
    delete:
      summary: User Logout
      tags:
      - Authentication
      security:
      - bearerAuth: []
      description: |
        This endpoint allows users to log out of their account. It revokes the JWT token, ensuring the user is securely logged out.
      responses:
        '200':
          description: Logout successful
        '401':
          description: Unauthorized - JWT token is invalid or expired
        '500':
          description: Internal Server Error

  "/api/v1/forgot_password":
    post:
      summary: Forgot Password
      tags:
      - Authentication
      description: |
        This endpoint allows users to request a password reset link if they have forgotten their password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: john@example.com
      responses:
        '200':
          description: Password reset instructions sent
        '404':
          description: Email not found
        '500':
          description: Internal Server Error

  "/api/v1/reset_password":
    post:
      summary: Reset Password
      tags:
      - Authentication
      description: |
        This endpoint allows users to reset their password using a reset token received via email.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reset_password_token:
                  type: string
                  example: "token12345"
                password:
                  type: string
                  format: password
                  example: newpassword
                password_confirmation:
                  type: string
                  format: password
                  example: newpassword
      responses:
        '200':
          description: Password successfully reset
        '400':
          description: Invalid token or password mismatch
        '500':
          description: Internal Server Error
          
  "/api/v1/resend_verification":
  post:
    summary: Resend Verification Code
    tags:
    - Authentication
    description: |
      This endpoint allows users to request a new account verification code if the original code is lost or expired.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
                example: john@example.com
    responses:
      '200':
        description: Verification code resent
      '400':
        description: Invalid email or user not found
      '500':
        description: Internal Server Error
        
# Workspaces
  "/api/v1/workspaces":
    get:
      summary: Lists all workspaces
      tags:
      - Workspaces
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Workspaces retrieved
    post:
      summary: Creates a workspace
      tags:
      - Workspaces
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: Workspace created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                workspace:
                  type: object
                  properties:
                    name:
                      type: string
                  required:
                  - name
              required:
              - name
  "/api/v1/workspaces/{id}":
    put:
      summary: Updates a workspace
      tags:
      - Workspaces
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Workspace updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                workspace:
                  type: object
                  properties:
                    name:
                      type: string
    delete:
      summary: Deletes a workspace
      tags:
      - Workspaces
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: Workspace deleted

  "/api/v1/workspaces/{workspace_id}/workspace_users":
    post:
      summary: Adds a user to a workspace
      tags:
      - WorkspaceUsers
      security:
      - bearerAuth: []
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '201':
          description: User added to workspace
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                workspace_user:
                  type: object
                  properties:
                    email:
                      type: string
                    role:
                      type: string
                  required:
                  - email
                  - role
              required:
              - workspace_user
  "/api/v1/workspaces/{workspace_id}/workspace_users/{id}":
    put:
      summary: Updates a user's role in a workspace
      tags:
      - WorkspaceUsers
      security:
      - bearerAuth: []
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: User role updated in workspace
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
              required:
              - role
    delete:
      summary: Removes a user from a workspace
      tags:
      - WorkspaceUsers
      security:
      - bearerAuth: []
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: User removed from workspace

servers:
- url: https://api.multiwoven.com
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
